<% form_for(@job, :html => {:multipart => true}) do |f| %>
  <%= f.error_messages %>
  <%= f.hidden_field(:apptracker_id, :value => @apptracker.id ) %>
  <%= hidden_field(:form, :form_id, :value => 2 ) %>
  <p>Part 2 of 2</p>
    Job Attachments<br /><br /> 
    <% @job.attachment_count.times do |n|%>
      <% @job.job_attachments.build() %>

<span id="attachments_fields">
  <%= file_field_tag "attachments[#{n}][file]", :size => 30, :id => nil  -%><label class="inline"><span id="attachment_description_label_content"><%= l(:label_optional_description) %></span><%= text_field_tag "attachments[#{n}][description]", '', :size => 60, :id => nil %>
</label>
</span>
<br />


    <% f.fields_for :job_attachments do |ja| %>
      <span id="attachment_fields">
          <span id="attachment_description_label_content">
            <%= file_field(ja, :filename) %>
          </span>
          <br />
          <%= ja.label(:notes, 'Notes/Description (Optional):') %><br />
          <%= ja.text_area(:notes, :size => "60x5") %><br />
        <small>
          <%= l(:label_max_size) %>: <%= number_to_human_size(Setting.attachment_max_size.to_i.kilobytes) %>
        </small>
      </span>
      <br /><br />

      <!-- Provide opportunity to delete child records -->
      <% unless ja.object.new_record? %>
          <%= ja.label :_delete, 'Remove:' %>
          <%= ja.check_box :_delete %>
      <% end %>
    <% end %>
    <% end %>
    <p>
    <%= f.submit('Save') %>
    </p>
    
    <%= 
      #FIXME This is the code you will add for adding attachments once the Redmine Attachment Model is implemented. 
      #render :partial => "shared/attachment" 
    %> 
<% end %>

